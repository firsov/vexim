#!/bin/bash

. /root/user/tools/.config

if [ ! $CONFIG ];then
    echo "config not loaded"
    exit
fi

if [ ! -d /backup ];then
mkdir /backup
chmod 700 /backup
fi;

if [ $COMPRESS == true ];then
    ext='tar.bz2'
    tarParam='jcf'
else
    ext='tar'
    tarParam='cf'
fi
allTime=$(date +%s)
day=`date '+%w'`
ls -d /www/*/*/www | while read path;do
login=`echo $path | cut -f3 -d/`
site=`echo $path | cut -f4 -d/`
    if [ $BACKUPUSER == true ];then
	to=/www/$login/backup/
	if [ ! -d $to  ];then
    	    mkdir $to;
	fi
	chmod 500 $to;
	chown $login:$login $to;
	if [ ! -f ${to}/.enable.file ];then
	    printf "Пропуск vhost - \e[1;33m%s\e[0m, пользователя -  \e[1;34m%s\e[0m . Необходимо активировать\n"  "$site" "$login"
	    continue
	fi

    else
	to=/backup/
    fi

    if [  -f  /www/$login/backup/.disable.file ];then
	printf "Пропуск vhost - \e[1;33m%s\e[0m, пользователя -  \e[1;34m%s\e[0m . Заблокирован пользователем\n"  "$site" "$login"
	continue;
    fi

    if [ ! -f ${to}${login}_${site}_0.${ext} ];then
	day=0
    fi
    
    if [ $day != 0 ];then
	addParam="--newer-mtime '1 days ago'"
	printf "\e[1;32mDump\e[0m: \e[1;33m%s\e[0m - site \e[1;34m%s\e[0m (день $day) " $login $site
    else
	addParam=""
	printf "\e[1;32mDump\e[0m: \e[1;33m%s\e[0m - site \e[1;34m%s\e[0m (full) " $login $site
    fi
    
    file="${to}${login}_${site}_${day}"
    time=$(date +%s)

    if [ -f ${file}.${ext} ];then
        nice -n 20 mv ${file}.${ext} ${file}_old.${ext}
    fi

    if [ $BACKUPUSER == true ] && [ -f  ${to}.file_${site} ];then
        nice -n 20 su $login -s /bin/bash -c "tar --exclude 'error*log'  -C /www/$login/$site/www  -${tarParam} - ${addParam} `cat ${to}/.file_${site}`" >  ${file}.${ext}
    else
        nice -n 20 su $login -s /bin/bash -c "tar --exclude 'error*log'  -C /www/$login/$site/www  -${tarParam} - ${addParam} ./" > ${file}.${ext}
    fi

    if [ $BACKUPUSER == true ];then
	ln -sf ${file}.${ext} /backup/
    fi
    getSize "${file}.${ext}" size

    printf ". Время работы - %d сек. Размер файла - %s\n" $(( $(date +%s) - ${time})) ${size}
done
printf "\e[1;32mЗавершение. Общее время работы: %d сек.\e[0m\n" $(( $(date +%s) - ${allTime}))
#EOS

