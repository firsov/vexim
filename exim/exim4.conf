####################################s##################################
#                  Runtime configuration file for Exim               #
######################################################################
disable_ipv6=true

MAILMAN_HOME=/usr/local/mailman
MAILMAN_WRAP=MAILMAN_HOME/mail/mailman
MAILMAN_USER=exim
MAILMAN_GROUP=exim

.include /etc/exim4/vexim-config.conf

local_interfaces = MY_IP

VIRTUAL_DOMAINS = SELECT DISTINCT domain FROM domains WHERE type = 'local' AND enabled = '1' AND domain = '${quote_mysql:$domain}'
RELAY_DOMAINS = SELECT DISTINCT domain FROM domains WHERE type = 'relay'  AND domain = '${quote_mysql:$domain}'
ALIAS_DOMAINS = SELECT DISTINCT alias FROM domainalias WHERE alias = '${quote_mysql:$domain}'

domainlist local_domains = @ : asprex.ru  : ${lookup mysql{VIRTUAL_DOMAINS}} : ${lookup mysql{ALIAS_DOMAINS}}
domainlist relay_to_domains = ${lookup mysql{RELAY_DOMAINS}}
hostlist   relay_from_hosts = localhost : MY_IP : +relay : 127.0.0.1


acl_smtp_rcpt = acl_check_rcpt
acl_smtp_data = acl_check_content
acl_smtp_helo = acl_check_helo


.ifdef USE_AV
av_scanner = clamd:/var/run/clamav/clamd.ctl
.endif

.ifdef USE_SPAMD
local_scan_path = /usr/lib/exim4/local_scan/sa-exim.so
spamd_address = 127.0.0.1 783
.endif

exim_user = exim
exim_group = exim

# never_users = root
smtp_accept_max = 500 
host_lookup = *
rfc1413_hosts = *
rfc1413_query_timeout = 0s
ignore_bounce_errors_after = 2d
timeout_frozen_after = 7d

log_selector = +all+tls_cipher +tls_peerdn
.ifdef TLS
    # SSL/TLS cert and key
    tls_certificate = /etc/exim4/mail.pem
    tls_privatekey = /etc/exim4/mail.pem
    # Advertise TLS to anyone
    tls_advertise_hosts = *
    tls_on_connect_ports=465
    daemon_smtp_ports = 25 : 465
.endif

begin acl


acl_whitelist_local_deny:
  .include /etc/exim4/vexim-acl-whitelist.conf

acl_check_helo:
   accept  hosts         = +relay_from_hosts
  .include /etc/exim4/vexim-acl-check-helo.conf

acl_check_rcpt:
    accept  authenticated = *

    accept  local_parts   = postmaster
          domains       = +local_domains

    accept  hosts         = +relay_from_hosts


    deny    local_parts   = ^.*[@%!/|] : ^\\.

  .include /etc/exim4/vexim-acl-check-spf.conf
  .include /etc/exim4/vexim-acl-check-rcpt.conf
  .include /etc/exim4/vexim-acl-check-greylist.conf




  accept  domains       = +local_domains
          endpass
          verify        = recipient

  accept  domains       = +relay_to_domains
          endpass
          verify        = recipient


  accept  hosts         = +relay_from_hosts

  deny    message       = relay not permitted


acl_check_content:
  .include /etc/exim4/vexim-acl-check-content.conf
  accept
  

begin routers

.ifdef  SMARTHOST
isp_smarthost:
    driver = manualroute
    domains = ! +local_domains
    transport = smarthost_smtp
    route_data = SMARTHOST
    same_domain_copy_routing
    no_more 
.endif

dnslookup:
  driver = dnslookup
  domains = ! +local_domains
  transport = remote_smtp
  ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8 : MY_IP
  no_more

mailman_router:
  driver = accept
  require_files = MAILMAN_HOME/lists/$local_part/config.pck
  local_part_suffix_optional
  local_part_suffix = -bounces : -bounces+* : \
                      -confirm+* : -join : -leave : \
                      -owner : -request : -admin
  headers_remove = X-Spam-Score:X-Spam-Report
  transport = mailman_transport

ditch_maxmsgsize:
  driver = redirect
  allow_fail
  condition = ${if >{$message_size}{${lookup mysql{select users.maxmsgsize from users,domains \
  		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and users.maxmsgsize > 0 \
		and users.domain_id=domains.domain_id }{${value}K}fail}} {yes}{no}}
  data = :fail:\n\Your message is too big.\n \
	 	Your message was rejected because the user $local_part@$domain\n \
		does not accept messages larger than \
		${lookup mysql{select users.maxmsgsize from users,domains \
		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and users.maxmsgsize > 0 \
		and users.domain_id=domains.domain_id}{${value}K}fail} Kb.
  local_part_suffix = +*
  local_part_suffix_optional
  retry_use_local_part

.ifdef USE_AV
ditch_malware:
  driver = redirect
  allow_fail
  data = :blackhole:
  condition = ${if and { {match {$h_X-ACL-Warn:}{.*malware.*}} \
                         {eq {${lookup mysql{select users.on_avscan from users,domains \
		                where localpart = '${quote_mysql:$local_part}' \
		                and domain = '${quote_mysql:$domain}' \ 
		                and users.on_avscan = '1' \
		                and users.domain_id=domains.domain_id}}}{1} }} {yes}{no} }

.endif

.ifdef USE_SPAMD
ditch_spam:
  driver = redirect
  allow_fail
  data = :blackhole:
  condition = ${if >{$spam_score_int}{${lookup mysql{select users.sa_refuse * 10 from users,domains \
                where localpart = '${quote_mysql:$local_part}' \
                and domain = '${quote_mysql:$domain}' \
        	and users.on_spamassassin = '1' \
                and users.domain_id=domains.domain_id \
		and users.sa_refuse > 0 }{$value}fail}} {yes}{no}}
  local_part_suffix = +*
  local_part_suffix_optional
  retry_use_local_part
.endif


POP = ${lookup mysql{select pop from users,domains where localpart = '${quote_mysql:$local_part}' and domain = '${quote_mysql:$domain}' and domains.enabled = '1' and users.enabled = '1' and users.domain_id = domains.domain_id}}
QUOTED = ${lookup mysql{select pop from users,domains where localpart = '${quote_mysql::$local_part}' and domain = '${quote_mysql::$domain}' and domains.enabled = '1' and users.enabled = '1' and users.domain_id = domains.domain_id}} 
COND = ${lookup mysql{select 1 from users,domains where localpart = '${quote_mysql:$local_part}' and domain = '${quote_mysql:$domain}' and domains.enabled = '1' and users.enabled = '1' and users.domain_id = domains.domain_id and users.pop like '/usr/local/mail%' }} 



virtual_vacation:
  driver = accept
  condition = ${if and { {!match {$h_precedence:}{(?i)junk|bulk|list}} \
                         {eq {${lookup mysql{select users.on_vacation from users,domains \
		                where localpart = '${quote_mysql:$local_part}' \
		                and domain = '${quote_mysql:$domain}' \ 
		                and users.on_vacation = '1' \
		                and users.domain_id=domains.domain_id}}}{1} }} {yes}{no} }
  no_verify
  no_expn
  unseen
  transport = virtual_vacation_delivery


virtual_forward:
  driver = redirect
  check_ancestor
  retry_use_local_part
  unseen = ${if eq {${lookup mysql{select unseen from users,domains \
		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and users.on_forward = '1' \
		and users.domain_id=domains.domain_id}}}{1} {yes}{no}}
  data = ${lookup mysql{select forward from users,domains \
	where localpart='${quote_mysql:$local_part}' \
	and domain='${quote_mysql:$domain}' \
	and users.domain_id=domains.domain_id \
	and on_forward = '1'}}
  # We explicitly make this condition NOT forward mailing list mail!
  condition = ${if and { {!match {$h_precedence:}{(?i)junk}} \
                         {eq {${lookup mysql{select users.on_forward from users,domains \
		                where localpart = '${quote_mysql:$local_part}' \
		                and domain = '${quote_mysql:$domain}' \ 
		                and users.on_forward = '1' \
		                and users.domain_id=domains.domain_id}}}{1} }} {yes}{no} }




 
virtual_filter:

headers_add = "X-Original-To: ${lc:${original_local_part}}@${lc:${original_domain}}"
condition = ${if eq {COND} {1} {yes} {no} }
debug_print = "R: mfilter from $sender_address for ${lc:${original_local_part}}@${lc:${original_domain}} ($local_part@$domain)"
driver = redirect
file = POP/.forward
#require_files = exim:QUOTED/.forward
no_verify
rewrite=false
no_expn
check_ancestor
allow_filter
user = exim
forbid_smtp_code = true
directory_transport = address_directory
#directory_transport = virtual_delivery
file_transport = address_file
skip_syntax_errors
local_part_suffix = +*
local_part_suffix_optional
retry_use_local_part
#file_transport = virtual_delivery
reply_transport = address_reply
pipe_transport = address_pipe


.ifdef USE_SPAMD		
virtual_domains:
  driver = redirect
  allow_fail
  data = ${lookup mysql{select smtp from users,domains \
  		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and domains.enabled = '1' \
		and users.enabled = '1' \
		and users.domain_id = domains.domain_id}}
  headers_add = ${if >{$spam_score_int}{${lookup mysql{select users.sa_tag * 10 from users,domains \
  		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and users.on_spamassassin = '1' \
		and users.domain_id=domains.domain_id }{$value}fail}} {X-Spam-Flag: YES\n}{} }

  headers_remove = ${if or { { <{$spam_score_int}{1} } \
  			     { <{$spam_score_int}{${lookup mysql{select users.sa_tag * 10 from users,domains \
			       where localpart = '${quote_mysql:$local_part}' \
			       and domain = '${quote_mysql:$domain}' \
			       and users.on_spamassassin = 1 \
			       and users.domain_id=domains.domain_id}{$value}fail}} } \
			     { eq {0}{${lookup mysql{select users.sa_tag * 10 from users,domains \
			       where localpart = '${quote_mysql:$local_part}' \
			       and domain = '${quote_mysql:$domain}' \
			       and users.on_spamassassin = 0 \
			       and users.domain_id=domains.domain_id}{$value}fail}}} \
			   } {X-Spam-Score:X-Spam-Report} }
  local_part_suffix = +*
  local_part_suffix_optional
  retry_use_local_part
  file_transport = virtual_delivery
  reply_transport = address_reply
  pipe_transport = address_pipe
.else 
virtual_domains:
  driver = redirect
  allow_fail
  data = ${lookup mysql{select smtp from users,domains \
  		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and domains.enabled = '1' \
		and users.enabled = '1' \
		and users.domain_id = domains.domain_id}}
  local_part_suffix = +*
  local_part_suffix_optional
#  retry_use_local_part
  file_transport = virtual_delivery
  reply_transport = address_reply
  pipe_transport = address_pipe

.endif


  
.include /etc/exim4/vexim-group-router.conf




virtual_domains_catchall:
  driver = redirect
  allow_fail
  data = ${lookup mysql{select smtp from users,domains where localpart = '*' \
  		and domain = '${quote_mysql:$domain}' \
		and users.domain_id = domains.domain_id}}
  retry_use_local_part
  file_transport = virtual_delivery
  reply_transport = address_reply
  pipe_transport = address_pipe_catchall

virtual_domain_alias:
  driver = redirect
  allow_fail
  data = ${lookup mysql{select concat('${quote_mysql:$local_part}@', domain) \
  		from domains,domainalias where domainalias.alias = '${quote_mysql:$domain}' \
		and domainalias.domain_id = domains.domain_id}}
  retry_use_local_part
  

system_aliases:
  driver = redirect
  allow_fail
  allow_defer
  data = ${lookup{$local_part}lsearch{/etc/aliases}}
  user = mail
  group = mail
  file_transport = address_file
  pipe_transport = address_pipe


#userforward:
#debug_print = "R: mfilter for $local_part@$domain"
#driver = redirect
#file = POP/.forward
#require_files = exim:QUOTED/.forward
#no_verify
#no_expn
#check_ancestor
#allow_filter
#user = exim
#forbid_smtp_code = true
#directory_transport = address_directory
#file_transport = address_file
#pipe_transport = address_pipe
#reply_transport = address_reply
#skip_syntax_errors
#cannot_route_message = Unknown user


#localuser:
# driver = accept
## check_local_user
# transport = local_delivery
# cannot_route_message = Unknown user



begin transports

remote_smtp:
  driver = smtp
  interface = MY_IP

.ifdef SMARTHOST
smarthost_smtp:
  driver = smtp
.endif

local_delivery:
  driver = appendfile
  file = /var/mail/$local_part
  delivery_date_add
  envelope_to_add
  return_path_add
  group = mail
  user = $local_part
  mode = 0660
  no_mode_fail_narrower

virtual_delivery:
  driver = appendfile
  envelope_to_add
  return_path_add
  mode = 0600
  maildir_format = true
  create_directory = true
  directory = ${lookup mysql{select smtp from users,domains \
		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and users.domain_id = domains.domain_id}}
  user = ${lookup mysql{select users.uid  from users,domains \
		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and users.domain_id = domains.domain_id}}
  group = ${lookup mysql{select users.gid from users,domains \
		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and users.domain_id = domains.domain_id}}
  quota = ${lookup mysql{select users.quota from users,domains \
  		where localpart = '${quote_mysql:$local_part}' \
		and domain = '${quote_mysql:$domain}' \
		and users.domain_id = domains.domain_id}{${value}M}}
  quota_is_inclusive = false
  #quota_size_regex = ,S=(\d+):
  quota_warn_threshold = 75%
  maildir_use_size_file = false
  quota_warn_message = "To: $local_part@$domain\n\
  			Subject: Mailbox quota warning\n\n\
			This message was automatically generated by the mail delivery software.\n\n\
			You are now using over 75% of your allocated mail storage quota.\n\n\
			If your mailbox fills completely, further incoming messages will be automatically\n\
			returned to their senders.\n\n\
			Please take note of this and remove unwanted mail from your mailbox.\n"

virtual_vacation_delivery:
  driver   = autoreply
  from     = "${local_part}@${domain}"
  to       = ${sender_address}
  subject  = "Autoreply from ${local_part}@${domain}"
  text     = ${lookup mysql{select vacation from users,domains \
		where domain='${quote_mysql:$domain}' \
		and localpart='${quote_mysql:$local_part}' \
		and users.domain_id=domains.domain_id}}

mailman_transport:
  driver = pipe
  command = MAILMAN_WRAP \
            '${if def:local_part_suffix \
                  {${sg{$local_part_suffix}{-(\\w+)(\\+.*)?}{\$1}}} \
                  {post}}' \
            $local_part
  current_directory = MAILMAN_HOME
  home_directory = MAILMAN_HOME
  user = MAILMAN_USER
  group = MAILMAN_GROUP

address_pipe:
  driver = pipe
  return_output
  user = ${lookup mysql{select users.uid from users,domains where localpart = '${quote_mysql:$local_part}' and domain = '${quote_mysql:$domain}' and users.domain_id = domains.domain_id}}
  group = ${lookup mysql{select users.gid from users,domains where localpart = '${quote_mysql:$local_part}' and domain = '${quote_mysql:$domain}' and users.domain_id = domains.domain_id}}

address_pipe_catchall:
  driver = pipe
  return_output
  user = ${lookup mysql{select users.uid from users,domains where localpart = '*' and domain = '${quote_mysql:$domain}' and users.domain_id = domains.domain_id}}
  group = ${lookup mysql{select users.gid from users,domains where localpart = '*' and domain = '${quote_mysql:$domain}' and users.domain_id = domains.domain_id}}

address_pipe_local:
  driver = pipe
  return_output


address_file:
  driver = appendfile
  delivery_date_add
  envelope_to_add
  return_path_add

address_directory:
    driver = appendfile
    maildir_format


address_reply:
  driver = autoreply



begin retry

# Domain               Error       Retries
# ------               -----       -------

*                      *           F,2h,15m; G,16h,1h,1.5; F,14d,6h



begin rewrite
*@*  $h_from F


begin authenticators

plain_login:
        driver = plaintext
        public_name = PLAIN
        server_condition = ${lookup mysql{SELECT '1' FROM users \
				WHERE username = '${quote_mysql:$2}' \
				AND clear = '${quote_mysql:$3}'} {yes}{no}}
        server_set_id = $2

fixed_login:
        driver = plaintext
        public_name = LOGIN
        server_prompts = "Username:: : Password::"
        server_condition = ${lookup mysql{SELECT '1' FROM users \
				WHERE username = '${quote_mysql:$1}' \
				AND clear = '${quote_mysql:$2}'} {yes}{no}}                    
        server_set_id = $1

fixed_cram:
        driver = cram_md5
        public_name = CRAM-MD5
        server_secret = ${lookup mysql{SELECT clear FROM users \
				WHERE username = '${quote_mysql:$1}'}{$value}fail}
        server_set_id = $1


